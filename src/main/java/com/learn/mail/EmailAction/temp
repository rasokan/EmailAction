package com.learn.cn;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.TreeSet;

public class WordBreak {

	public static void main(String[] args) {

		Scanner s = new Scanner(System.in);

		List<String> inputStringList = new ArrayList<String>();

		Map<Character, TreeSet<String>> mappingFirstCharByString = new HashMap<>();

		int n = s.nextInt();

		for (int i = 0; i < n; i++) {

			String str = s.next();

			inputStringList.add(str);

			if (mappingFirstCharByString.containsKey(str.charAt(0))) {

				TreeSet<String> listOfString = mappingFirstCharByString.get(str.charAt(0));
				listOfString.add(str);
				mappingFirstCharByString.put(str.charAt(0), listOfString);

			} else {

				TreeSet<String> listOfString = new TreeSet();
				listOfString.add(str);

				mappingFirstCharByString.put(str.charAt(0), listOfString);
			}

		}

		String inputSentence = s.next();

		List<String> outputSentenceList = new ArrayList();

		for (int i = 0; i < inputSentence.length(); i++) {

			TreeSet<String> matchedStringList = mappingFirstCharByString.get(inputSentence.charAt(i));

			if (matchedStringList!=null && matchedStringList.size() >= 1) {

				String tempSentence = inputSentence.substring(i, inputSentence.length());

				StringBuilder outputSentence = new StringBuilder();

				for (String matchedString : matchedStringList) {

					int k = 0;

					for (; k < matchedString.length(); k++) {

						if (tempSentence.charAt(k) == matchedString.charAt(k)) {

						}

						else {

							break;
						}

					}

					if (k == matchedString.length()) {

						outputSentence.append(matchedString).append(" ");

					}

				}

			}

		}

	}

}
