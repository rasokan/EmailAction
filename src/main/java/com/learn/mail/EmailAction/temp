package com.learn.codingninjas.dynamicprogramming;

import java.util.Scanner;

public class KadaneAlgorithm {

	public static void main(String[] args) {

		Scanner s = new Scanner(System.in);
		int noOfTestCasee = s.nextInt();

		for (int testCase = 1; testCase <= noOfTestCasee; testCase++) {

			String str = s.next();

			int[] inputArray = new int[str.length()];

			for (int i = 0; i < str.length(); i++) {

				if (str.charAt(i) - '0' == 34) {

					inputArray[i] = -1;
				}

				if (str.charAt(i) - '0' == 27) {

					inputArray[i] = 1;
				}
			}

			System.out.println(maxSumSubArray(inputArray));

		}
	}

	private static int maxSumSubArray(int inputArray[]) {

		int max_so_far = inputArray[0];

		int max_Ending_here = 0;

		// Position to get the Sub Array Maximum
		int start = 0;
		int end = 0;

		int s = 0;

		for (int i = 0; i < inputArray.length; i++) {

			max_Ending_here = max_Ending_here + inputArray[i];

			if (max_so_far < max_Ending_here) {

				max_so_far = max_Ending_here;

				start = s;
				end = i;
			}

			if (max_Ending_here < 0) {

				max_Ending_here = 0;
				s = i + 1;
			}

		}

		int sum = max_so_far;

		for (int j = 0; j < start; j++) {

			if (inputArray[j] < 0) {

				sum = sum + Math.abs(inputArray[j]);
			}

		}

		for (int k = end + 1; k < inputArray.length; k++) {

			if (inputArray[k] < 0) {

				sum = sum + Math.abs(inputArray[k]);
			}

		}

		return sum;
	}

}
